import { Octokit } from '@octokit/rest';
import chalk from 'chalk';
import ora from 'ora';
import { config } from '../config';
import { logger } from '../utils/logger';
import { delay } from '../utils/helpers';

export class PullSharkGenerator {
  private octokit: Octokit;
  private username: string;
  private targetRepo: string;

  constructor() {
    this.octokit = new Octokit({ auth: config.GITHUB_TOKEN });
    this.username = config.GITHUB_USERNAME;
    this.targetRepo = config.PULL_SHARK_TARGET_REPO || `${this.username}/cek-buat`;
  }

  async generate(): Promise<void> {
    const spinner = ora('🦈 Generating Pull Shark achievement...').start();
    
    try {
      // Check current PR count
      const currentPRs = await this.getCurrentMergedPRs();
      const needed = 2 - currentPRs;
      
      if (needed <= 0) {
        spinner.succeed('🎉 Pull Shark achievement already unlocked!');
        return;
      }

      spinner.text = `Creating ${needed} pull requests for Pull Shark...`;
      
      for (let i = 0; i < needed; i++) {
        await this.createAndMergePR(i + 1);
        if (i < needed - 1) {
          await delay(config.DELAY_BETWEEN_ACTIONS);
        }
      }

      spinner.succeed('🦈 Pull Shark achievement generated! Check your profile in a few minutes.');
      
    } catch (error) {
      spinner.fail('❌ Failed to generate Pull Shark achievement');
      logger.error('Pull Shark generation error:', error);
      throw error;
    }
  }

  private async getCurrentMergedPRs(): Promise<number> {
    try {
      const { data: pulls } = await this.octokit.pulls.list({
        owner: this.username,
        repo: this.targetRepo.split('/')[1],
        state: 'closed',
        per_page: 100
      });

      const mergedPRs = pulls.filter(pr => pr.merged_at !== null);
      return mergedPRs.length;
    } catch (error) {
      logger.warn('Could not fetch existing PRs, assuming 0');
      return 0;
    }
  }

  private async createAndMergePR(index: number): Promise<void> {
    const branchName = `${config.PULL_SHARK_BRANCH_PREFIX}${index}-${Date.now()}`;
    const fileName = `achievements/pull-shark-${index}-${Date.now()}.md`;
    
    try {
      // Create branch
      const { data: mainBranch } = await this.octokit.repos.getBranch({
        owner: this.username,
        repo: this.targetRepo.split('/')[1],
        branch: 'main'
      });

      await this.octokit.git.createRef({
        owner: this.username,
        repo: this.targetRepo.split('/')[1],
        ref: `refs/heads/${branchName}`,
        sha: mainBranch.commit.sha
      });

      // Create file
      const content = this.generateAchievementFile(index);
      await this.octokit.repos.createOrUpdateFileContents({
        owner: this.username,
        repo: this.targetRepo.split('/')[1],
        path: fileName,
        message: `🦈 Add Pull Shark achievement file ${index}`,
        content: Buffer.from(content).toString('base64'),
        branch: branchName
      });

      // Create PR
      const { data: pr } = await this.octokit.pulls.create({
        owner: this.username,
        repo: this.targetRepo.split('/')[1],
        title: `🦈 Pull Shark Achievement #${index}`,
        head: branchName,
        base: 'main',
        body: `Auto-generated PR untuk mendapatkan Pull Shark achievement 🦈\n\n- Menambahkan file achievement\n- Automated untuk GitHub badges\n- Part ${index} of Pull Shark generation`
      });

      await delay(2000);

      // Merge PR
      await this.octokit.pulls.merge({
        owner: this.username,
        repo: this.targetRepo.split('/')[1],
        pull_number: pr.number,
        commit_title: `🦈 Merge Pull Shark achievement #${index}`,
        merge_method: 'merge'
      });

      logger.info(`✅ Created and merged PR #${pr.number} for Pull Shark`);

    } catch (error) {
      logger.error(`Failed to create PR ${index}:`, error);
      throw error;
    }
  }

  private generateAchievementFile(index: number): string {
    return `# Pull Shark Achievement #${index}

Generated on: ${new Date().toISOString()}

## 🦈 Pull Shark Progress

This file was automatically created to help unlock the Pull Shark achievement on GitHub.

### Requirements:
- ✅ 2+ merged pull requests
- ✅ Automated generation
- ✅ Valid contribution

### Stats:
- File: ${index}/2
- Date: ${new Date().toLocaleDateString('id-ID')}
- Time: ${new Date().toLocaleTimeString('id-ID')}

---

*Generated by GitHub Achievement Generator*
*Repository: https://github.com/Dlanang/cek-buat*
`;
  }
}